1 Объясните основные принципы объектно-ориентированного программирования.
Основные принципы ООП:

1 Наследование - принцип, который позволяет описать новый класс на основе другого класса. Это позволяет уменьшить количество повторяемого кода, улучшить читаемость.

2 Абстракция - выделение главных, значительных характеристик класса. В классе должно содержаться как можно меньше информации, которая не нужна для выполнения классом своих прямых обязанностей и задач.

3 Инкапсуляция - ограничение доступа к данным. Доступ к данным предоставляется только через специальные методы, которые правильно взаимодействуют с полями. Поля класса по возможности должны быть закрытыми.

4 Полиморфизм - возможность классов иметь методы с одним и тем же названием, но разной реализацией.

2 Garbage Collection

Сборщик мусора занимается удалением объектов из кучи. Когда на объект не ссылается ни одна ссылка в работающей программе сборщик очищает помять от объекта и освобождает ее. При этом если после завершения работы программы на объект останется ссылка, то произойдет утечка памяти. Сборщик мусора можно настроить в ручную замедлив или ускорив интервалы между циклами проверки объектов.

3 Различия между ArrayList и LinkedList

Основные различия двух наследников класса List в реализации. В основе ArrayList лежит обычный массив с фиксированным размером, который имеет инициализационную длину 10 по умолчанию. 
Если в этом массиве заканчивается место, то создается новый увеличенный массив, куда копируются старые значения. LinkedList работает на основе двусвязного списка, который при необходимости добавить новый элемент располагает его в случайном месте памяти и связывает его с концом списка ссылками. Если необходимо часто извлекать элементы из середины списка, или искать по индексу, то лучше использовать ArrayList, а если поиск элементов происходит редко, а добавление достаточно часто, то стоит выбрать LinkedList.

4 ConcurrentHashMap работает на основе хэш-таблиц. В отличие от HashMap значения, доступные по ключу отмечены как volatile, что позволяет изменять данные многопоточно. Хэш-таблица делится на N сегментов, каждый из которых блокируется только при непосредственном взаимодействии с ним.(По умолчанию N=16)
Основные улучшения:
1 Потокобезопасность
2 Отсутствие блокировки всей таблицы во время работы
3 Отсутствие блокировки при выполнении чтения

5 JVM (java virtual machine) - виртуальная машина, которая интерпретирует байт код в машинный код, который использует устройство на котором она запущена.

JRE - программа, которая, как контейнер, собирает код, вместе с необходимыми коду библиотеками и запускает его выполнение на JVM

JDK - пакет разработки ПО на java.